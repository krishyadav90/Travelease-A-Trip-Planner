# ✈️ TravelEase - Intelligent Trip Planner

**TravelEase** is an intelligent, full-featured travel planning platform designed to simplify and enrich the process of organizing trips. The application offers a seamless user experience powered by modern technologies including React, TypeScript, Tailwind CSS, Supabase, and advanced AI capabilities.

TravelEase enables users to explore destinations, discover holiday packages, search hotels, generate personalized packing checklists, estimate trip costs, and interact with a smart AI chatbot for real-time travel advice.

---

## 🚀 Key Features

- **Landing & Informational Sections**
  - Hero, About, Features, and Contact pages
  - Testimonials, seasonal promotions, and holiday packages

- **AI-Powered Assistant**
  - Integrated chatbot for travel-related queries and planning support
  - Generates packing checklists and provides smart recommendations

- **Destination Discovery**
  - Interactive sidebar and tabbed views with regional highlights
  - Detailed destination cards with visuals and brief summaries

- **Hotel Management**
  - Filtered hotel listings with search, gallery, ratings, and descriptions
  - Dynamic hotel detail pages for easy booking decisions

- **Itinerary & Cost Planning**
  - Intuitive trip cost estimator with budget inputs
  - Dynamic itinerary builder with map integration

- **User Engagement**
  - Co-traveler management system and profile personalization
  - Photo gallery and user-contributed content
  - Newsletter subscription and user reviews

---

## 🧪 Tech Stack

| Technology    | Description                             |
|---------------|-----------------------------------------|
| **React**     | UI library for building responsive apps |
| **TypeScript**| Static type-checking for robustness     |
| **Vite**      | Blazing fast development tooling        |
| **Tailwind CSS** | Utility-first CSS for rapid styling |
| **Supabase**  | Backend-as-a-service (auth, DB, storage)|
| **ShadCN/UI** | Prebuilt UI components for consistency  |
| **Lucide Icons** | Modern open-source icon set         |

---

## 🗂️ Directory Overview

```bash
├── public/                   # Static assets (images, favicon, etc.)
│   └── Lovable-picture/
├── src/
│   ├── components/
│   │   ├── destination/      # Destination display logic
│   │   ├── holidays/         # Holiday promotions
│   │   ├── hotels/           # Hotel list, filters, detail views
│   │   └── ui/               # Reusable UI components
│   ├── data/                 # Static and mock data sources
│   ├── hooks/                # Custom React hooks
│   ├── integrations/         # External service wrappers (e.g., Supabase)
│   ├── lib/                  # Utility modules and helper functions
│   ├── pages/                # High-level route views
│   ├── utils/                # Utility functions
│   ├── App.tsx               # Root component
│   └── main.tsx              # Vite entry point
├── supabase/                 # Supabase configuration (optional)
├── .gitignore
├── package.json
├── vite.config.ts
├── tailwind.config.ts
├── tsconfig.json
└── Modelfile                 # AI configuration (chatbot, ML tools)
````

---

## ⚙️ Getting Started

### 1. Clone the Repository

```bash
git clone https://github.com/krishyadav90/Travelease-A-Trip-Planner.git
cd travelease
```

### 2. Install Dependencies

```bash
npm install
```

### 3. Start Development Server

```bash
npm run start
```

---

## 🔐 Environment Variables

To use Supabase or other APIs, create a `.env` file in the root directory:

```env
VITE_SUPABASE_URL=https://your-project.supabase.co
VITE_SUPABASE_ANON_KEY=your-anon-key
```

---

## 🧠 AI & Advanced Modules

* `ChatBot.tsx`: Real-time AI-powered assistant (e.g., OpenAI or local LLMs)
* `PackingChecklistGenerator.tsx`: Generates travel-specific checklists
* `EnhancedProfile.tsx`: Dynamic, AI-enhanced user profile management

---

## 🛠️ Build & Deployment

To create a production build:

```bash
npm run build
```

To preview the build locally:

```bash
npm run preview
```

You can deploy the app using **Vercel**, **Netlify**, or **any static host** that supports Vite.

---

## 🤝 Contribution Guidelines

Contributions are welcome and appreciated. Please follow these steps:

1. Fork the repository
2. Create a new branch: `git checkout -b feature/your-feature-name`
3. Commit your changes: `git commit -m 'Add new feature'`
4. Push to the branch: `git push origin feature/your-feature-name`
5. Open a pull request

---

## 📄 License

This project is licensed under the **MIT License**. See the [LICENSE](./LICENSE) file for more details.

---

## 🙏 Acknowledgements

* [Supabase](https://supabase.com/)
* [ShadCN UI](https://ui.shadcn.com/)
* [Tailwind CSS](https://tailwindcss.com/)
* [Lucide Icons](https://lucide.dev/)
* [OpenAI](https://platform.openai.com/) *(if used)*

---

## 📬 Contact

For questions, suggestions, or collaborations, contact:
📧 [krishyadav3866@gmail.com]
📧[anoopgurjar90@gmail.com]
📧[aeshakul17@gmail.com]
📧[deepikabhati207@gmail.com]


